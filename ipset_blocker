#! /bin/bash 
# $Id: ipset_blocker,v 1.6 2024/02/02 08:57:33 hippie Exp $
# code is like poetry, if you have to explain it, it is bad
# vim: set ts=4 sw=4 :

IPSET_BASE='by-syslog'
BLACKLIST='CN|RU|BR|IN|IQ|TW|DO|KR|EG|HK|SG|BD|VN|ID|DM|KE|PK|TN|NG|AG|IR|TJ|UA|LA|TR|AE|CA|KZ|US'
WHITELIST='AT|DE'
PIPE='/var/spool/rsyslog/ipset-blocker'
IPSET_BIN='/usr/sbin/ipset'
IFS='
'
declare -i DEBUG=${DEBUG=0}
umask 0077

function setup {
	trap '	echo "# exiting on signal."
			exit 0
		' EXIT INT QUIT ABRT HUP TERM

	if [ ${DEBUG} -gt 2 ]; then set -x; fi
	if [ ${DEBUG} -lt 2 ]; then
		exec 1> >(/usr/bin/logger -p "syslog.info" -t $(basename $0)) 2>&1
	fi

	echo '# make sure, we have our ipsets ready'
	IPSETS_EXIST=$( ${IPSET_BIN} list | grep ${IPSET_BASE} | grep -E "^create " )
	for NETS in '' '-nets'; do
		for IP6 in '' '-ipv6'; do
			if ! ${IPSET_BIN} list "${IPSET_BASE}${NETS}${IP6}" >/dev/null 2>&1; then
				if [ "${NETS}" == "-nets" ]; then TYPE='hash:net'; else TYPE='hash:ip'; fi
				if [ "${IP6}" == "-ipv6" ]; then FAMILY='inet6'; else FAMILY='inet'; fi
				echo "# ipset create ${IPSET_BASE}${NETS}${IP6} ${TYPE} family ${FAMILY} comment timeout 2073600"
				${IPSET_BIN} create ${IPSET_BASE}${NETS}${IP6} ${TYPE} family ${FAMILY} comment timeout 2073600
			fi
		done
	done
}

function main {
	while /bin/true; do
		echo "# open listener on ${PIPE}"
		while read LINE; do
			if [ ${DEBUG} -ge 2 ]; then UUID='[ '$( cat /proc/sys/kernel/random/uuid)' ] '; else UUID=''; fi
			TIME=$( /bin/date "+%s")
			RAWIPAD=$( echo ${LINE} | perl -ne \
				'	my $line = $_; chomp $line;
					use Regexp::IPv4 qw($IPv4_re); $line =~ s/.*?($IPv4_re).*/$1/ and print( "ipv4 $line");
					use Regexp::IPv6 qw($IPv6_re); $line =~ s/.*?($IPv6_re).*/$1/ and print( "ipv6 $line");
				')
			if [ "${RAWIPAD}" == "" ]; then
				echo "[${UUID}] parse error: ${LINE}"
			else
				IPAD=$( echo ${RAWIPAD} | cut -d' ' -f2)
				IP6=$( if echo ${RAWIPAD} | cut -d' ' -f1 | grep -q 'ipv6'; then echo '-ipv6'; else echo ''; fi)

				if ${IPSET_BIN} -q test ${IPSET_BASE}${IP6} ${IPAD} || ${IPSET_BIN} -q test ${IPSET_BASE}-nets${IP6} ${IPAD}; then
					if [ ${DEBUG} -ge 1 ]; then echo "${UUID}${IPSET_BIN} -q test ${IPSET_BASE}(-nets)${IP6} ${IPAD} <- this exists"; fi
				else
					ASN=$( /usr/bin/whois -h whois.cymru.com " -v ${IPAD}" | tail -1)
					ASN_COUNTRY=$( echo ${ASN} | awk '{print $7}')
					ASN_COMMENT=$( echo ${ASN} | awk '{print $13}')
					ASN_NET=$( echo ${ASN} | awk '{print $5}')

					if echo ${ASN_COUNTRY} | grep -qE ${WHITELIST}; then
						echo "${UUID}IP ${IPAD} (${ASN_COMMENT} (${ASN_COUNTRY})) is whitelisted."
					else
						if echo ${ASN_COUNTRY} | grep -qE ${BLACKLIST}; then
							if [ "${ASN_NET}" == "NA" ]; then
								if [ "${IP6}" != '' ]; then ASN_NET="${IPAD}/128"; else ASN_NET="${IPAD}/32"; fi
								echo "${UUID}could not find an ASN for ${IPAD} (${ASN_COUNTRY}), adding it as ${ASN_NET}"
							fi
							echo "${UUID}${IPSET_BIN} add ${IPSET_BASE}-nets${IP6} --exist ${ASN_NET} --comment \"#${TIME} (${IPSET_BASE}) ${ASN_COMMENT} (${ASN_COUNTRY})\""
							${IPSET_BIN} add ${IPSET_BASE}-nets${IP6} --exist ${ASN_NET} --comment "#${TIME} (${IPSET_BASE}) ${ASN_COMMENT} (${ASN_COUNTRY})"
						else
							echo "${UUID}${IPSET_BIN} add ${IPSET_BASE}${IP6} --exist ${IPAD} --comment \"#${TIME} (${IPSET_BASE}) ${ASN_COMMENT} (${ASN_COUNTRY})\""
							${IPSET_BIN} add ${IPSET_BASE}${IP6} --exist ${IPAD} --comment "#${TIME} (${IPSET_BASE}) ${ASN_COMMENT} (${ASN_COUNTRY})"
						fi
					fi
				fi
			fi
			sleep 1
		done <${PIPE}
		echo '# pipe closed. re-opening.'
	done
}

setup
main
